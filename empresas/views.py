from django.shortcuts import render
from django.http import JsonResponse
from odbc_reader.services import fetch_data


def rename_key(list, mapping):
    for item in list:
        for chave_antiga, chave_nova in mapping.items():
            if chave_antiga in item:
                item[chave_nova] = item.pop(chave_antiga)
    return list
def get_empresas(request):
    query = 'SELECT * FROM bethadba.geempre'
    result = fetch_data(query)
    key_mapping = {
    "nome_emp": "nome_empresa",
    "ende_emp": "nome_endereco",
    "cepe_emp": "CEP",
    "cida_emp": "cidade",
    "cgce_emp": "cnpj",
    "iest_emp": "inscricao_estadual",
    "imun_emp": "inscricao_municipal",
    "ijuc_emp": "inscricao_junta_comercial",
    "bair_emp": "bairro",
    "ramo_emp": "ramo_atividade",
    "codi_emp": "codigo_empresa",
    "apel_emp": "apelido_empresa",
    "codi_mun": "codigo_municipio",
    "nume_emp": "numero_empresa",
    "djuc_emp": "data_inscricao_junta_comercial",
    "fone_emp": "telefone",
    "rleg_emp": "responsavel_legal",
    "esta_emp": "UF",
    "tins_emp": "tipo_inscricao",
    "stat_emp": "situacao",
    "dina_emp": "data_inatividade",
    "dcad_emp": "data_cadastro",
    "sele_emp": "selecionada",
    "codi_cla": "NaN",
    "ucta_emp": "usa_contabilidade",
    "ucxa_emp": "usa_livro_caixa",
    "uhon_emp": "usa_honorarios",
    "uefi_emp": "usa_esc_fiscal",
    "upat_emp": "usa_patrimonio",
    "ulal_emp": "usa_lalur",
    "uatu_emp": "usa_atualizar",
    "upro_emp": "usa_protocolo",
    "ccae_emp": "CAE",
    "isub_emp": "inscricao_substi_tributario",
    "empreg_emp": "num_empregados_empresa",
    "vlfat_emp": "valor_medio_faturamento",
    "vlhon_emp": "valor_honorarios",
    "cpf_leg_emp": "cpf_responsavel",
    "end_leg_emp": "endereco_responsavel",
    "mun_leg_emp": "municipio_responsavel",
    "uf_leg_emp": "estado_responsavel",
    "cep_leg_emp": "CEP_responsavel",
    "njud_emp": "natureza_responsavel",
    "comp_emp": "complemento",
    "nume_leg_emp": "numero_responsavel",
    "bair_leg_emp": "bairro_responsavel",
    "codm_leg_emp": "codigo_municipio_responsavel",
    "fone_leg_emp": "telefone_responsavel",
    "cnae_emp": "CNAE",
    "dddf_emp": "DDD",
    "codi_con": "contador",
    "cargo_leg_emp": "cargo_responsavel",
    "dddf_leg_emp": "DDD_responsavel",
    "livro_cart_emp": "num_livro_cartorio_registro_especial",
    "folha_cart_emp": "folha_livro_cartorio",
    "nliv_cart_emp": "num_folha_livro_cartorio",
    "soc_civis_emp": "sociedade_civil",
    "cfdf_emp": "CF_DF",
    "simples_emp": "enquadramento_simples",
    "dsimples_emp": "data_enquadramento_simples",
    "munirais_emp": "codigo_federal_mun",
    "rfed_emp": "regime_federal_folha",
    "ufol_emp": "usa_folha",
    "upto_emp": "usa_ponto",
    "comp_leg_emp": "complemento_resp_legal",
    "email_emp": "email",
    "i_classificacoes": "codigo_classificacao",
    "ctahono_emp": "contaContabil_int_honorarios",
    "rg_resp_emp": "RG_responsavel_legal",
    "caedesm_emp": "codigo_desmembramento_CAE_MG",
    "nome_cartorio_emp": "nome_cartorio",
    "selehono_emp": "select_novo_honorarios",
    "origem_reg": "origem_registro",
    "fantasia_emp": "nome_fantasia",
    "foro_emp": "foro_comarca",
    "obj_social_emp": "objeto_social",
    "dtinicio_emp": "data_inicio_atividades",
    "pais_emp": "pais",
    "duracao_emp": "duracao_contrato",
    "data_cart": "data_registro_cartorio",
    "dttermino_emp": "data_termino_contrato",
    "fax_emp": "numero_fax",
    "ureg_emp": "usa_registro",
    "razao_emp": "razao_social",
    "tipoi_emp": "motivo_inatividade",
    "tipo_end_emp": "tipo_endereco",
    "codigo_pais": "codigo_pais",
    "codigo_municipio": "codigo_municipio",
    "insc_suframa": "inscricao_suframa",
    "i_cnae20": "CNAE_20",
    "usa_cnae20": "usa_CNAE_20",
    "email_leg_emp": "email_resp_legal",
    "upto_tec_emp": "usa_teclado",
    "observacao_emp": "observacoes",
    "uf_emissao_resp": "UF_emissao_resp",
    "caixa_postal_emp": "caixa_postal",
    "usa_dominio_web": "usa_dominio_web",
    "CERTIFICADO_DIGITAL": "cert_digital",
    "SITE_EMP": "pagina_web_empresa",
    "QUALIFICACAO_LEG_EMP": "qualificacao_resp_legal",
    "HONORARIO_TIPO": "honorario_tipo_escrit_client",
    "CNAE_20_DESMENBRAMENTO": "CNAE_20_DESMENBRAMENTO",
    "TIPO_REGISTRO": "TIPO_REGISTRO",
    "IDENTIFICACAO_LIVRO_DEMONSTRATIVO": "IDENTIFICACAO_LIVRO_DEMONSTRATIVO",
    "ORGAO_EMISSOR_LEG_EMP": "ORGAO_EMISSOR_LEG_EMP",
    "DATA_EMISSAO_LEG_EMP": "DATA_EMISSAO_LEG_EMP",
    "IDENTIDADE_PROFISSIONAL_LEG_EMP": "IDENTIDADE_PROFISSIONAL_LEG_EMP",
    "CODIGO_MUNICIPIO_CARTORIO": "CODIGO_MUNICIPIO_CARTORIO",
    "PROFISSAO_LEG_EMP": "PROFISSAO_LEG_EMP",
    "NACIONALIDADE_LEG_EMP": "NACIONALIDADE_LEG_EMP",
    "ESTADO_CIVIL_LEG_EMP": "ESTADO_CIVIL_LEG_EMP",
    "GERAR_INTEGRA": "GERAR_INTEGRA",
    "OBS_GERAL": "OBS_GERAL",
    "OBS_SOCIETARIO": "OBS_SOCIETARIO",
    "OBS_CONTABIL": "OBS_CONTABIL",
    "OBS_FISCAL": "OBS_FISCAL",
    "OBS_PESSOAL": "OBS_PESSOAL",
    "RESPONSAVEL_LEGAL_EMPRESA_JUNTO_BASE_RFB": "RESPONSAVEL_LEGAL_EMPRESA_JUNTO_BASE_RFB",
    "I_DADOS_EVENTOS_ESOCIAL": "I_DADOS_EVENTOS_ESOCIAL",
    "I_LOTE_ESOCIAL": "I_LOTE_ESOCIAL",
    "STATUS_ESOCIAL": "STATUS_ESOCIAL",
    "ENVIAR_ESOCIAL": "ENVIAR_ESOCIAL",
    "INCLUSAO_VALIDADA_ESOCIAL": "INCLUSAO_VALIDADA_ESOCIAL",
    "GERAR_RETIFICACAO_ESOCIAL": "GERAR_RETIFICACAO_ESOCIAL",
    "PROCESSAR_EXCLUSAO_ESOCIAL": "PROCESSAR_EXCLUSAO_ESOCIAL",
    "GUID_CONTABIL": "GUID_CONTABIL",
    "GUID_ONVIO": "GUID_ONVIO",
    "ENDPOINT_EXCLUSAO": "ENDPOINT_EXCLUSAO",
    "CNPJ_PRODUTOR_RURAL_EMP": "CNPJ_PRODUTOR_RURAL_EMP",
    "ESCRITORIO_USA_CUSTOS": "ESCRITORIO_USA_CUSTOS",
    "CODIGO_MUNICIPIO_RESPONSAVEL_LEGAL": "CODIGO_MUNICIPIO_RESPONSAVEL_LEGAL",
    "USA_PORTAL_EMPREGADO": "USA_PORTAL_EMPREGADO",
    "USA_EMPRESA_CENTRALIZADORA": "USA_EMPRESA_CENTRALIZADORA",
    "EMPRESA_CENTRALIZADORA": "EMPRESA_CENTRALIZADORA",
    "USA_PROCESSOS_GESTTA": "USA_PROCESSOS_GESTTA",
    "EXCLUSAO_COMPLETA_DADOS": "EXCLUSAO_COMPLETA_DADOS",
    "ACESSO_MODULOS_ANTERIOR_EXCLUSAO_DADOS": "ACESSO_MODULOS_ANTERIOR_EXCLUSAO_DADOS",
    "COMPANY_ID": "COMPANY_ID",
    "ASSINATURA_DIGITAL_RESPONSAVEL_LEGAL_EMPRESA": "ASSINATURA_DIGITAL_RESPONSAVEL_LEGAL_EMPRESA",
    "ORIGEM_EMP": "ORIGEM_EMP",
    "PERMITE_INCLUIR_BRCLIENT": "PERMITE_INCLUIR_BRCLIENT",
    
    
    }
    filtered_result = rename_key(result, key_mapping)
    
    print(filtered_result[0])
    return JsonResponse({"Empresas": filtered_result}, safe=False)